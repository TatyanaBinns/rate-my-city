{"version":3,"sources":["components/Login.js","pages/LoginPage.js","city4.png","components/PageTitle.js","components/TopBorder.js","components/SearchCity.js","components/ShowReviews.js","pages/MainPage.js","components/AddCityState.js","pages/AddCityStatePage.js","components/AddReview.js","pages/AddReviewPage.js","components/Settings.js","pages/SettingsPage.js","components/EditReview.js","pages/EditReviewPage.js","components/ResetPassword.js","pages/ResetPasswordPage.js","App.js","index.js"],"names":["ForgotPasswordWindow","props","Modal","size","centered","Header","closeButton","Title","id","Body","Footer","Button","onClick","onHide","Login","React","useState","modalShow","setModalShow","history","useHistory","show","toggle","firstName","lastName","emailAddress","userName","loginPassword","confirmPassword","message","setMessage","validatePassword","e","validator","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","doLogin","event","a","preventDefault","obj","email","value","password","js","JSON","stringify","config","method","url","headers","data","axios","then","response","res","error","returnFromLogin","doRegister","confirmpassword","returnFromRegister","result","localStorage","setItem","accessToken","push","clear","className","type","autoFocus","placeholder","ref","c","onChange","target","isEmail","validateEmail","href","emailToken","doForgot","LoginPage","PageTitle","style","display","justifyContent","alignItems","height","src","cityPicture","alt","TopBorder","userFullName","buttonLabel","validUsr","userFirstName","userLastName","disabled","window","location","reload","SearchCity","showOptions","setShowOptions","cities","setCities","states","setStates","userNames","setUserNames","citySel","setCitySel","stateSel","setStateSel","userNameSel","setUserNameSel","filterBy","option","state","selected","length","label","toLowerCase","indexOf","text","useEffect","map","name","fillDropdowns","ToggleButton","isOpen","onMouseDown","options","selectedOpt","isMenuShown","toggleMenu","RegisterUserWindow","ShowReviews","reviews","modalRegistration","routerChange","bind","deleteReview","cty","ste","this","confirm","userEmail","city","jwtToken","setState","rev","rat","axiosUrl","userNameSelected","citySelected","stateSelected","showModalRegister","rec","_id","parseFloat","averageCost","toFixed","averageNature","averageCulture","averageSafety","averageEntertainment","averageTransportation","averageFood","ratings","rate","i","userdetails","dateFormat","time","format","editReview","description","rating","cost","nature","culture","safety","entertainment","transportation","food","Component","withRouter","MainPage","AddCityState","cityName","setCityName","stateName","setStateName","addCity","country","returnFromAddCity","AddCityStatePage","AddReview","pageTitle","cityReview","stateReview","review","setReview","ratingEnt","setRatingEnt","ratingNat","setRatingNat","ratingCos","setRatingCos","ratingSaf","setRatingSaf","ratingCul","setRatingCul","ratingTra","setRatingTra","ratingFoo","setRatingFoo","radios","addReview","userid","userId","readOnly","ButtonGroup","radio","idx","variant","checked","currentTarget","AddReviewPage","Settings","setFirstName","setLastName","setUserName","userPassword","oldPassword","setOldPassword","setLoginPassword","setConfirmPassword","doSettings","returnFromSettigs","SettingsPage","commentReview","rates","parse","ratingsReview","updateReview","returnFromEditCity","EditReviewPage","EditReview","ResetPassWord","doResetPassword","getEmailToken","onChangeLoginPassword","onChangeConfirmPassword","pass","parametersURL","search","returnFromReset","handleClickCancel","ResetPasswordPage","ResetPassword","App","path","exact","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.624dd70f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Modal } from 'react-bootstrap';\nimport validator from 'validator';\nimport '../App.css';\n\n\nfunction ForgotPasswordWindow(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Rate My City\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>\n          We will send you an email based on the address you've written with a link that will allow you \n          to reset your password. Please follow the instructions on the email.\n        </p>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n\n    </Modal>\n  );\n}\n\n\n\nfunction Login() {\n  const [modalShow, setModalShow] = React.useState(false);\n  const history = useHistory();\n  const [show, toggle] = React.useState(false);\n  const ToggleShow = () => toggle(true);\n  const ToggleHide = () => toggle(false);\n\n  var firstName = '';\n  var lastName = '';  \n  var emailAddress = '';\n  var userName = '';\n  var loginPassword = '';\n  var confirmPassword = '';\n\n  function handleClickCancel() {\n      localStorage.clear();\n      history.push(\"/\");\n  }\n\n  const [message, setMessage] = useState('');\n\n  const validateEmail = (e) => {\n    var email = e.target.value\n    if (validator.isEmail(email)) {\n      setMessage('')\n    } else {\n        setMessage('The email is not Valid')\n    }\n  }\n\n  const validatePassword = (e) => {\n    if (validator.isStrongPassword(e, {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1\n    })) {\n        setMessage('')\n    } else {\n        setMessage('The password in not strong enough')\n    }\n  }\n\n  const doLogin = async event => {\n      event.preventDefault();\n\n      var obj = { email:emailAddress.value, password:loginPassword.value };\n      var js = JSON.stringify(obj);\n\n      var config = {\n          method: 'post',\n          url: 'https://rate-my-city.herokuapp.com/api/login',\n          headers: { 'Content-Type': 'application/json' },\n          data: js\n      };\n\n      axios(config)\n          .then(function (response) {\n              var res = response.data;\n              if (res.error) {\n                  setMessage(res.error);\n              } else {\n                  returnFromLogin(res);\n              }\n          })\n\n  }\n\n  const doRegister = async event => {\n    if (message === '' && loginPassword.value === confirmPassword.value) {\n\n      event.preventDefault();\n\n      var obj = { \n          firstName: firstName.value,\n          lastName: lastName.value,\n          userName: userName.value,\n          email:emailAddress.value, \n          password:loginPassword.value,\n          confirmpassword: confirmPassword.value \n      };\n\n      var js = JSON.stringify(obj);\n\n      var config = {\n          method: 'post',\n          url: 'https://rate-my-city.herokuapp.com/api/register',\n          headers: { 'Content-Type': 'application/json' },\n          data: js\n      };\n\n      axios(config)\n          .then(function (response) {\n              var res = response.data;\n              if (res.error && res.error !== '') {\n                  setMessage(res.error);\n              } else {\n                  returnFromRegister();\n              }\n          })\n    } else {\n      setMessage(\"Passwords do not Match\");\n    }\n  }\n\n  function doForgot() {\n    setModalShow(true);\n\n      var obj = { \n          email:emailAddress.value, \n      };\n\n      var js = JSON.stringify(obj);\n\n      var config = {\n          method: 'post',\n          url: 'https://rate-my-city.herokuapp.com/api/resetPassword',\n          headers: { 'Content-Type': 'application/json' },\n          data: js\n      };\n\n      axios(config)\n          .then(function (response) {\n              var res = response.data;\n              if (!res.message) {\n                  setMessage(res.message);\n              } else {\n                  setMessage(res.message);\n                  localStorage.setItem(\"emailToken\", res.emailToken);\n              }\n          })\n  }\n\n  function returnFromLogin(result) {\n      localStorage.setItem('accessToken', result.accessToken);\n      localStorage.setItem('userId', result.id);\n      localStorage.setItem('userFirstName', result.firstName);\n      localStorage.setItem('userLastName', result.lastName);\n      localStorage.setItem('userName', result.userName);\n      localStorage.setItem('userEmail', emailAddress.value);\n      localStorage.setItem('userPassword', loginPassword.value);\n      history.push(\"/\");\n  }\n\n  function returnFromRegister() {\n      localStorage.clear();\n      localStorage.setItem(\"showModalRegister\", true);\n      history.push(\"/\");\n  }\n\n  \n\n\n  return(\n    <div className=\"container-fluid h-custom\">\n      <div className=\"row d-flex justify-content-center align-items-center h-100\">\n        <div className=\"mt-5 col-xl-4\">\n          <form >\n\n            <div className=\"divider d-flex align-items-center my-4 mt-0\">\n              <p className=\"text-center fw-bold mx-3 mb-4\"><h3>{ !show ? 'Login' : 'Register' }</h3></p>\n            </div>\n\n            <div className=\"form-group row d-flex justify-content-center mb-5\">\n              <div className=\"col-md-4\">\n                <button type=\"button\" className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={ToggleHide}>&nbsp;Login</button>\n              </div>\n              <div className=\"col-md-4\">\n                <button type=\"button\" className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={ToggleShow}>Register</button>\n              </div>\n            </div>\n\n            {show &&\n              <div className=\"form-outline mt-2 mb-2\">\n                <input type=\"text\" autoFocus \n                    className=\"form-control form-control-lg\" \n                    placeholder=\"Enter First Name\" \n                    ref={(c) => firstName = c} />\n                <label className=\"form-label\">First Name</label>\n              </div>\n            }\n            {show &&\n              <div className=\"form-outline mt-2 mb-2\">\n                <input type=\"text\" \n                    className=\"form-control form-control-lg\" \n                    placeholder=\"Enter Last Name\" \n                    ref={(c) => lastName = c} />\n                <label className=\"form-label\">Last Name</label>\n              </div>\n            }\n\n            {show &&\n              <div className=\"form-outline mt-2 mb-2\">\n                <input type=\"text\" \n                      className=\"form-control form-control-lg\" \n                      placeholder=\"Enter User Name\"\n                      ref={(c) => userName = c} />\n                <label className=\"form-label\">User Name</label>\n              </div>\n            }\n\n            <div className=\"form-outline mt-2 mb-2\">\n              <input type=\"email\" autoFocus \n                  className=\"form-control form-control-lg\" \n                  placeholder=\"Enter a valid email address\" \n                  ref={(c) => emailAddress = c} \n                  onChange={(e) => show ? validateEmail(e) : e}/>\n              <label className=\"form-label\">Email Address</label>\n            </div>\n\n            <div className=\"form-outline my-2 mb-2\">\n              <input type=\"password\" \n                  className=\"form-control form-control-lg\" \n                  placeholder=\"Enter password\" \n                  ref={(c) => loginPassword = c}\n                  onChange={(e) => show ? validatePassword(e.target.value) : e.target.value} />\n              <label className=\"form-label\">Password (Have at least 8 characters, one capital letter, number, and special character.)</label>\n            </div>\n            {show &&\n              <div className=\"form-outline mt-2 mb-2\">\n                <input type=\"password\" \n                    className=\"form-control form-control-lg\" \n                    placeholder=\"Confirm password\"\n                    ref={(c) => confirmPassword = c}\n                    onChange={(e) => validatePassword(e.target.value)} />\n                <label className=\"form-label\">Confirm password</label>\n              </div>\n            }\n\n            <div className=\"form-group row d-flex justify-content-center \">\n              {!show && \n                <div className=\"col-md-4\">\n                  <button type=\"button\" className=\"btn text-white btn-lg fw-bold btn-outline-dark btn-secondary\" onClick={doLogin}>Sign In</button>\n                </div>\n              }\n              {show && \n                <div className=\"col-md-4\">\n                  <button type=\"button\" className=\"btn text-white btn-lg fw-bold btn-outline-dark btn-secondary\" onClick={doRegister}>Sign In</button>\n                </div>\n              }\n\n              <div className=\"col-md-4\">\n                <button type=\"button\" className=\"btn btn-dark btn-lg fw-bold form-control\" onClick={handleClickCancel}>Cancel</button>\n              </div>\n            </div>\n\n            {!show && \n              <div className=\"d-flex justify-content-center align-items-center mt-4\">\n                <a className=\"link-line\" href=\"/#\" onClick={() => doForgot()}>Forgot Password ?</a>\n              </div>\n            }\n\n            <div className=\"divider d-flex align-items-center my-4\">\n              <p className=\"text-center fw-bold mx-3 mb-1\">{message}</p>\n            </div>\n\n            <ForgotPasswordWindow\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n            />\n\n          </form>\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default Login;","import React from 'react';\nimport LoginRegister from '../components/Login';\n\n\nconst LoginPage = () =>\n{\n    return(\n\n        <div className = \"container\">\n\n            <LoginRegister />\n\n            </div>\n    );\n};\nexport default LoginPage;\n","export default __webpack_public_path__ + \"static/media/city4.8ea25c95.png\";","import React from 'react';\nimport cityPicture from '../city4.png';\n\nfunction PageTitle()\n{\n  return(\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '10vh'}}>\n      <h2><img className=\"logo-picture\" src={cityPicture} alt=\"Logo of App\"/>Rate My City</h2>\n    </div>\n  );\n};\nexport default PageTitle;","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useHistory } from 'react-router-dom';\n\n\nfunction TopBorder()\n{\n\n    const history = useHistory();\n\n    var userFullName = '';\n    var buttonLabel = 'Login / Register';\n    var validUsr = false;\n    if ( localStorage.accessToken && localStorage.accessToken !== '' ) {\n        userFullName = \"Welcome: \" + localStorage.userFirstName + ' ' + localStorage.userLastName;\n        validUsr = true;\n        buttonLabel = 'Logout'\n    }\n\n    const [show, toggle] = React.useState(validUsr);\n    const ToggleShow = () => toggle(validUsr);\n\n    function handleClick() {\n        if ( localStorage.accessToken && localStorage.accessToken !== '' ) {\n            userFullName = '';\n            localStorage.clear();\n            window.location.reload(false);\n        } else {\n            history.push(\"/login\");\n        }\n    }\n\n    function handleClickSettings() {\n        history.push(\"/Settings\")\n    }\n\n\n    return(\n      <div className=\"container-fluid h-custom mt-5\">\n        <p>&nbsp;</p>\n        <div className=\"input-group mt-1 mb-2\">\n\n          <input className=\"form-control text-left fw-bold\" disabled=\"disabled\" placeholder={userFullName} />\n\n          <div className=\"input-group-append\" >\n              <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={handleClick}>{buttonLabel}</button>\n          </div>\n\n\n          {show &&\n            <div className=\"input-group-append\">\n              <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={handleClickSettings}>Settings</button>\n            </div>\n          }\n\n\n          {/* <div className=\"input-group-append\" >\n              <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={() => setModalShow(true)}>Add City</button>\n          </div>\n          <MyVerticallyCenteredModal\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n          /> */}\n\n        </div>\n      </div>\n\n    );\n};\n\nexport default TopBorder; \n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../App.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\n\n\nfunction SearchCity() {\n\n    const [showOptions, setShowOptions] = useState(false);\n    const [cities, setCities] = useState({});\n    const [states, setStates] = useState({});\n    const [userNames, setUserNames] = useState({});\n    const history = useHistory();\n    const [citySel, setCitySel] = useState('');\n    const [stateSel, setStateSel] = useState('');\n    const [userNameSel, setUserNameSel] = useState('');\n    \n\n    useEffect(() => {\n        if ( localStorage.accessToken && localStorage.accessToken !== '' ) {\n            setShowOptions(true);\n        }\n        localStorage.setItem(\"citySelected\", '');\n        localStorage.setItem(\"stateSelected\", '');\n        localStorage.setItem(\"userNameSelected\", '');\n        fillDropdowns();\n    }, [])\n\n\n\n    function filterBy(option, state) {\n      if (state.selected.length) {\n          return true;\n      }\n      return option.label.toLowerCase().indexOf(state.text.toLowerCase()) > -1;\n    }\n\n    function citySelected(selectedOpt) {\n        setCitySel(selectedOpt[0].label);\n    }\n\n    function stateSelected(selectedOpt) {\n        setStateSel(selectedOpt[0].label);\n    }\n\n    function userNameSelected(selectedOpt) {\n        setUserNameSel(selectedOpt[0].label);\n    }\n    \n    const ToggleButton = ({ isOpen, onClick }) => (\n      <button\n          className=\"toggle-button\"\n          onClick={onClick}\n          onMouseDown={e => {\n              e.preventDefault();\n          }}>\n          {isOpen ? '▲' : '▼'}\n      </button>\n    );\n      \n    function fillDropdowns() {\n        // Get Cities\n        var config = {\n            method: 'get',\n            url: 'https://rate-my-city.herokuapp.com/api/listCities',\n        };\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (!res.error) {\n                    setCities(res.map(({ name: label }) => ({ label })));\n                }\n            });\n\n        // Get States\n        config = {\n            method: 'get',\n            url: 'https://rate-my-city.herokuapp.com/api/listStates',\n        };\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (!res.error) {\n                    setStates(res.map(({ state: label }) => ({ label })))\n                }\n            })\n    \n        // Get Users\n        config = {\n            method: 'get',\n            url: 'https://rate-my-city.herokuapp.com/api/listUserName',\n        };\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (!res.error) {\n                    setUserNames(res.map(({ userName: label }) => ({ label })));\n                };\n            })\n    }\n\n    function handleClickCity () {\n        localStorage.setItem(\"cityReview\", '');\n        localStorage.setItem(\"stateReview\", '');\n        history.push(\"AddCity\")\n    }\n\n    function searchReviews () {\n        localStorage.setItem(\"citySelected\", citySel);\n        localStorage.setItem(\"stateSelected\", stateSel);\n        localStorage.setItem(\"userNameSelected\", userNameSel);\n        history.push(\"ShowReviews\")\n    }\n\n\n    return (\n\n      <div className=\"input-group d-flex justify-content-center\">\n        \n        <div className=\"form-group\">\n            <Typeahead\n                id=\"dropCity\"\n                filterBy={filterBy}\n                options={cities}\n                onChange={citySelected}\n                placeholder=\"Search by City ...\">\n                {({ isMenuShown, toggleMenu }) => (\n                  <ToggleButton isOpen={isMenuShown} onClick={e => toggleMenu()} />\n                )}\n            </Typeahead>\n        </div>\n\n        <div className=\"form-group\">\n            <Typeahead\n                id=\"dropState\"\n                filterBy={filterBy}\n                options={states}\n                onChange={stateSelected}\n                placeholder=\"Search by State ...\">\n                {({ isMenuShown, toggleMenu }) => (\n                  <ToggleButton isOpen={isMenuShown} onClick={e => toggleMenu()} />\n                )}\n            </Typeahead>\n        </div>\n\n        <div className=\"form-group\">\n            <Typeahead\n                id=\"dropUserName\"\n                filterBy={filterBy}\n                options={userNames}\n                onChange={userNameSelected}\n                placeholder=\"Search by User ...\">\n                {({ isMenuShown, toggleMenu }) => (\n                  <ToggleButton isOpen={isMenuShown} onClick={e => toggleMenu()} />\n                )}\n              </Typeahead>\n        </div>\n\n        <div>\n            <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={searchReviews}>Search</button>\n            {showOptions && \n                <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={handleClickCity}>Add City</button>\n            }\n        </div>\n\n        <div>\n            \n            <p>&nbsp;</p>\n        </div>\n\n      </div>\n    )\n\n}\n\nexport default SearchCity; ","import React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../App.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport dateFormat from \"moment\";\n\n\nfunction RegisterUserWindow(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Rate My City\n          </Modal.Title>\n        </Modal.Header>\n  \n        <Modal.Body>\n          <p>\n            We will send you an email based on the address you've written with a link that will allow you \n            to confirm your registration. Please follow the instructions on the email.\n          </p>\n        </Modal.Body>\n  \n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n  \n      </Modal>\n    );\n  }\n\nclass ShowReviews extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            reviews:[],\n            message:'',\n            modalRegistration: false,\n            showOptions:localStorage.accessToken ? true : false\n        }\n        this.routerChange = this.routerChange.bind(this);\n        this.deleteReview = this.deleteReview.bind(this);\n    }\n    \n\n    routerChange(cty, ste) {\n        localStorage.setItem(\"cityReview\", cty);\n        localStorage.setItem(\"stateReview\", ste);\n        this.props.history.push(\"/AddReview\");\n    };\n\n    deleteReview(cty, ste) {\n\n        if ( window.confirm('Are you sure you want to delete this review?')) {\n            this.obj = { \n                email:localStorage.userEmail,\n                city:cty,\n                jwtToken:localStorage.accessToken};\n            this.js = JSON.stringify(this.obj);\n    \n            this.config = {\n                method: 'post',\n                url: 'https://rate-my-city.herokuapp.com/api/delete',\n                headers: { 'Content-Type': 'application/json' },\n                data: this.js\n            };\n    \n            axios(this.config)\n                .then(response => {\n                    var res = response.data;\n                    if (res.error) {\n                        this.setState({\n                            message: res.error\n                        });\n                    } else {\n                        this.setState({\n                            message: ''\n                        });\n                        localStorage.accessToken = res.jwtToken.accessToken;\n                        window.location.reload(false);\n\n                    }\n                })\n        } \n    }\n\n    editReview(cty,ste,rev, rat) {\n        localStorage.setItem(\"cityReview\", cty);\n        localStorage.setItem(\"stateReview\", ste);\n        localStorage.setItem(\"commentReview\", rev);\n        localStorage.setItem(\"ratingsReview\", rat);\n        this.props.history.push(\"/EditReview\");\n    }\n    \n    componentDidMount() {\n\n        \n        \n\n        this.axiosUrl = 'https://rate-my-city.herokuapp.com/api/';\n\n        if ( !localStorage.userNameSelected) {\n            this.axiosUrl += 'searchCityState';\n        } else {\n            this.axiosUrl += 'searchUsername';\n        }\n\n        this.obj = { \n            city:localStorage.citySelected,\n            state:localStorage.stateSelected,\n            userName:localStorage.userNameSelected};\n        this.js = JSON.stringify(this.obj);\n\n        this.config = {\n            method: 'post',\n            url: this.axiosUrl,\n            headers: { 'Content-Type': 'application/json' },\n            data: this.js\n        };\n\n        axios(this.config)\n            .then(response => {\n                var res = response.data;\n                if (res.error) {\n                    this.setState({\n                        message: res.error\n                    });\n                } else {\n                    this.setState({\n                        message: '',\n                        reviews: res\n                    });\n                    if (localStorage.showModalRegister === \"true\") {\n                        localStorage.setItem(\"showModalRegister\", false)\n                        this.setState({\n                            modalRegistration: true\n                        })\n                    }\n                }\n            })\n    }\n\n    render () {\n        const {reviews} = this.state;\n        const {showOptions} = this.state;\n        return (\n            <body>\n                <div className=\"container input-group justify-content-center trans-color\">\n                    <table className=\"master-table\">\n                    {\n                        reviews.map((rec => \n                            <>\n                            <div className=\"d-table w-100 city-separator\">\n                                <p className=\"d-table-cell city-state\">\n                                    {rec._id}, &nbsp;{rec.state}\n                                </p>\n\n                                {showOptions && \n                                    <div className=\"d-table-cell tar\">\n                                        <button className=\"btn btn-sm fw-bold btn-secondary\" onClick={() => this.routerChange(rec._id, rec.state)} type=\"button\">Add Review</button>&nbsp;\n                                    </div>\n                                }\n                            </div>\n\n                            <div className=\"row justify-content-center\">\n                                <div className=\"\">\n                                    <table className=\"table table-responsive mb-1 mt-0\">\n                                        <tr className=\"rating-avg\">\n                                            <td>Cost:</td>\n                                            <td>{parseFloat(rec.averageCost).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Nature:</td>\n                                            <td>{parseFloat(rec.averageNature).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Culture:</td>\n                                            <td>{parseFloat(rec.averageCulture).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Safety:</td>\n                                            <td>{parseFloat(rec.averageSafety).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Entertaiment:</td>\n                                            <td>{parseFloat(rec.averageEntertainment).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Transportation:</td>\n                                            <td>{parseFloat(rec.averageTransportation).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Food:</td>\n                                            <td>{parseFloat(rec.averageFood).toFixed(1)}</td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n\n                            <div>\n                                {rec.ratings.map(function (rate, i) {\n                                    return <form key={i} className=\"box\">\n                                        <div>\n                                            <div className=\"line-delete\">\n                                                <span className=\"user\">\n                                                    <span className=\"usr-name\"><u>{rate.userdetails.userName}</u>&nbsp;&nbsp;</span> \n                                                    <span className=\"time-stamp\">wrote at {dateFormat(rate.time).format('MM-DD-YYYY @ hh:mm A')}:</span>\n                                                </span>\n                                                {rate.userdetails.userName === localStorage.userName &&\n                                                    <div>\n\n                                                        <span className=\"action\">\n                                                            <button className=\"delete-button\" onClick={() => this.editReview(rec._id, rec.state, rate.description, JSON.stringify(rate.rating))} type=\"button\">Edit</button>&nbsp;\n                                                            <button className=\"delete-button\" onClick={() => this.deleteReview(rec._id, rec.state)} type=\"button\">Delete</button>\n                                                        </span>\n                                                    </div>\n                                                }\n                                                <div>\n                                                    <div><p>&nbsp;</p></div>\n                                                    <p className=\"rate-comment\">\n                                                        {rate.description} \n                                                        {/* &nbsp;&nbsp;&nbsp; <img src={thumbsup}/> */}\n                                                    </p>\n                                                </div>\n                                            </div>\n                                            \n                                        </div>\n                                        <div className=\"row justify-content-center\">\n                                            <div className=\"\">\n                                                <table className=\"table table-responsive mb-1 mt-0\">\n                                                    <tr className=\"rating-avg2\">\n                                                        {/* <td> */}\n                                                        <td>Cost:</td>\n                                                        <td>{parseFloat(rate.rating.cost).toFixed(1)}</td>\n                                                        {/* </td> */}\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Nature:</td>\n                                                        <td>{parseFloat(rate.rating.nature).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Culture:</td>\n                                                        <td>{parseFloat(rate.rating.culture).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Safety:</td>\n                                                        <td>{parseFloat(rate.rating.safety).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Entertaiment:</td>\n                                                        <td>{parseFloat(rate.rating.entertainment).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Transportation:</td>\n                                                        <td>{parseFloat(rate.rating.transportation).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Food:</td>\n                                                        <td>{parseFloat(rate.rating.food).toFixed(1)}</td>\n                                                    </tr>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <RegisterUserWindow\n                                            show={this.state.modalRegistration}\n                                            onHide={() => this.setState({modalRegistration: false})}\n                                        />\n                                    </form>\n                                }, this)}\n                            </div>\n                            </>\n                        ), this)\n                    }\n                    </table>   \n                </div>\n            </body>\n        );\n    }\n}\n\nexport default withRouter(ShowReviews); ","\nimport React from 'react';\nimport PageTitle from '../components/PageTitle';\nimport TopBorder from '../components/TopBorder';\nimport SearchCity from '../components/SearchCity';\nimport ShowReviews from '../components/ShowReviews';\n\nconst MainPage = () =>\n{\nreturn(\n<div className = \"container\">\n<TopBorder />\n<PageTitle />\n<SearchCity />\n<ShowReviews />\n</div>\n);\n};\nexport default MainPage;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\n\nfunction AddCityState() {\n\n    const [cityName, setCityName] = useState('');\n    const [stateName, setStateName] = useState('');\n\n    const history = useHistory();\n    const [message, setMessage] = useState('');\n\n    const addCity = async event => {\n        event.preventDefault();\n\n        var obj = { \n            name:cityName,\n            state:stateName,\n            country:'USA',\n            jwtToken:localStorage.accessToken};\n        var js = JSON.stringify(obj);\n\n        var config = {\n            method: 'post',\n            url: 'https://rate-my-city.herokuapp.com/api/createCity',\n            // url: 'https://jsonplaceholder.typicode.com/posts',\n            headers: { 'Content-Type': 'application/json' },\n            data: js\n        };\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error) {\n                    setMessage(res.error);\n                } else {\n                    setMessage('');\n                    returnFromAddCity(res);\n                }\n            })\n    }\n\n    function returnFromAddCity(result) {\n        localStorage.setItem('accessToken', result.jwtToken.accessToken);\n        history.push(\"/\");\n    }\n\n    function handleClickCancel() {\n        history.push(\"/\");\n    }\n\n\n    return(\n        <div className=\"container-fluid h-custom mt-0\">\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n                    <form >\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '8vh'}}>\n                            <h1>Add City</h1>\n                        </div>\n\n                        <div className=\"divider d-flex align-items-center mt-0 my-4\">\n                            <p className=\"text-center fw-bold mx-3 mb-3\"></p>\n                        </div>\n                        <div className=\"form-outline mt-1 mb-2\">\n                            <input type=\"text\" autoFocus \n                                className=\"form-control form-control-lg\" \n                                value={cityName}\n                                onChange={(e) => {setCityName(e.target.value)}}\n                                placeholder=\"Only enter US city\" \n                            />\n                            <label className=\"form-label\">Enter City</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={stateName}\n                                onChange={(e) => {setStateName(e.target.value)}}\n                                placeholder=\"Only enter US state\" \n                            />\n                            <label className=\"form-label\">Enter State</label>\n                        </div>\n\n                        <div className=\"form-group row d-flex justify-content-center mt-4\">\n                            <div className=\"col-md-3\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg align-items-center\" onClick={addCity}>Add</button>\n                            </div>\n\n                            <div className=\"col-md-3\">\n                                <button type=\"button\" className=\"btn btn-dark btn-lg align-items-center\" onClick={handleClickCancel}>Cancel</button>\n                            </div>\n\n                            <div className=\"divider d-flex align-items-center mt-1 my-4\">\n                                <p className=\"text-center fw-bold mx-3 mb-5\">{message}</p>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default AddCityState;","\nimport React from 'react';\nimport AddCityState from '../components/AddCityState.js';\n\n\nconst AddCityStatePage = () => {\n\n    return(\n\n        <div className = \"container\">\n\n            <AddCityState/>\n\n        </div>\n    );\n};\n\nexport default AddCityStatePage;\n\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport '../App.css';\n// import createUtilityClassName from 'react-bootstrap/esm/createUtilityClasses';\n\nfunction AddReview() {\n\n    const pageTitle = useState(localStorage.cityReview ? 'Add Review' : 'Add City');\n    const [cityName, setCityName] = useState(localStorage.cityReview);\n    const [stateName, setStateName] = useState(localStorage.stateReview);\n    const [review, setReview] = useState('');\n    const [ratingEnt, setRatingEnt] = useState('1');\n    const [ratingNat, setRatingNat] = useState('1');\n    const [ratingCos, setRatingCos] = useState('1');\n    const [ratingSaf, setRatingSaf] = useState('1');\n    const [ratingCul, setRatingCul] = useState('1');\n    const [ratingTra, setRatingTra] = useState('1');\n    const [ratingFoo, setRatingFoo] = useState('1');\n\n    const radios = [\n        { name: '1', value: '1' },\n        { name: '2', value: '2' },\n        { name: '3', value: '3' },\n        { name: '4', value: '4' },\n        { name: '5', value: '5' }\n    ];\n\n    const history = useHistory();\n    const [message, setMessage] = useState('');\n\n    const addReview = async event => {\n        event.preventDefault();\n\n        // Add Review\n        var obj = { \n            userid:localStorage.userId,\n            email:localStorage.userEmail,\n            city:cityName,\n            state:stateName,\n            rating:{\n                entertainment:ratingEnt,\n                nature:ratingNat,\n                cost:ratingCos,\n                safety:ratingSaf,\n                culture:ratingCul,\n                transportation:ratingTra,\n                food:ratingFoo},\n            review:review,\n            jwtToken:localStorage.accessToken};\n        var js = JSON.stringify(obj);\n\n        var config = {\n            method: 'post',\n            url: 'https://rate-my-city.herokuapp.com/api/addRating',\n            headers: { 'Content-Type': 'application/json' },\n            data: js\n        };\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error) {\n                    setMessage(res.error);\n                } else {\n                    setMessage('');\n                    returnFromAddCity(res);\n                }\n            })\n    }\n\n    function returnFromAddCity(result) {\n        localStorage.setItem('accessToken', result.jwtToken.accessToken);\n        localStorage.setItem('cityReview', '')\n        localStorage.setItem('stateReview', '')\n        history.push(\"/\");\n    }\n\n    function handleClickCancel() {\n        localStorage.setItem('cityReview', '')\n        localStorage.setItem('stateReview', '')\n        history.push(\"/\");\n    }\n\n\n    return(\n        <div className=\"container-fluid h-custom mt-0\">\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n                    <form >\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '8vh'}}>\n                            <h1>{pageTitle}</h1>\n                        </div>\n\n                        <div className=\"divider d-flex align-items-center mt-0 my-4\">\n                            <p className=\"text-center fw-bold mx-3 mb-3\"></p>\n                        </div>\n                        <div className=\"form-outline mt-1 mb-2\">\n                            {localStorage.cityReview ? \n                                <input type=\"text\" autoFocus \n                                    className=\"form-control form-control-lg\" \n                                    value={cityName}\n                                    onChange={(e) => {setCityName(e.target.value)}}\n                                    placeholder=\"Only enter US city\" \n                                    readOnly\n                                />\n                                :\n                                <input type=\"text\" autoFocus \n                                    className=\"form-control form-control-lg\" \n                                    value={cityName}\n                                    onChange={(e) => {setCityName(e.target.value)}}\n                                    placeholder=\"Only enter US city\" \n                                />\n                            }\n                            <label className=\"form-label\">Enter City</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            {localStorage.cityReview ? \n                                <input type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    value={stateName}\n                                    onChange={(e) => {setStateName(e.target.value)}}\n                                    placeholder=\"Only enter US state\" \n                                    readOnly\n                                />\n                                :\n                                <input type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    value={stateName}\n                                    onChange={(e) => {setStateName(e.target.value)}}\n                                    placeholder=\"Only enter US state\" \n                                />\n                            }\n                            <label className=\"form-label\">Enter State</label>\n                        </div>\n\n                        <div className=\"form-outline mb-3\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={review}\n                                onChange={(e) => {setReview(e.target.value)}}\n                                placeholder=\"Enter your review\" \n                            />\n                            <label className=\"form-label\">Enter Comment.  (Max. 250 characters)</label>\n                        </div>\n\n                        <div className=\"div-table\">\n                            <table className=\"rating-table\">\n                                <tr>\n                                    <td className=\"label-rates\">Entertainment:&nbsp;</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio1-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark '}\n                                                name=\"radio1\"\n                                                value={radio.value}\n                                                checked={ratingEnt === radio.value}\n                                                onChange={(e) => setRatingEnt(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td className=\"label-rates\">Nature :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio2-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio2\"\n                                                value={radio.value}\n                                                checked={ratingNat === radio.value}\n                                                onChange={(e) => setRatingNat(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td className=\"label-rates\">Cost :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio3-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio3\"\n                                                value={radio.value}\n                                                checked={ratingCos === radio.value}\n                                                onChange={(e) => setRatingCos(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td className=\"label-rates\">Safety :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio4-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio4\"\n                                                value={radio.value}\n                                                checked={ratingSaf === radio.value}\n                                                onChange={(e) => setRatingSaf(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td className=\"label-rates\">Culture :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio5-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio5\"\n                                                value={radio.value}\n                                                checked={ratingCul === radio.value}\n                                                onChange={(e) => setRatingCul(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td className=\"label-rates\">Transportation:&nbsp;&nbsp;&nbsp; </td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio6-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio6\"\n                                                value={radio.value}\n                                                checked={ratingTra === radio.value}\n                                                onChange={(e) => setRatingTra(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td className=\"label-rates\">Food: </td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio7-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio7\"\n                                                value={radio.value}\n                                                checked={ratingFoo === radio.value}\n                                                onChange={(e) => setRatingFoo(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n\n                        <div className=\"form-group row d-flex justify-content-center mt-4\">\n                            <div className=\"col-md-3\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg align-items-center\" onClick={addReview}>Add</button>\n                            </div>\n\n                            <div className=\"col-md-3\">\n                                <button type=\"button\" className=\"btn btn-dark btn-lg align-items-center\" onClick={handleClickCancel}>Cancel</button>\n                            </div>\n\n                            <div className=\"divider d-flex align-items-center mt-1 my-4\">\n                                <p className=\"text-center fw-bold mx-3 mb-5\">{message}</p>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default AddReview;","import React from 'react';\nimport AddReview from '../components/AddReview.js';\n\n\nconst AddReviewPage = () => {\n\nreturn(\n\n    <div className = \"container\">\n\n        <AddReview/>\n\n        </div>\n    );\n};\n\nexport default AddReviewPage;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport validator from 'validator';\nimport '../App.css';\n\nfunction Settings() {\n\n    const history = useHistory();\n\n    const [message, setMessage] = useState('');\n    const [firstName, setFirstName] = useState(localStorage.userFirstName);\n    const [lastName, setLastName] = useState(localStorage.userLastName);\n    const [userName, setUserName] = useState(localStorage.userName);\n    const userEmail = useState(localStorage.userEmail);\n    const [oldPassword, setOldPassword] = useState(localStorage.userPassword);\n    const [loginPassword, setLoginPassword] = useState(localStorage.userPassword);\n    const [confirmPassword, setConfirmPassword] = useState(localStorage.userPassword);\n\n    const doSettings= async event => {\n        event.preventDefault();\n    \n        var obj = {\n            userId: localStorage.userId,\n            firstName: firstName,\n            lastName: lastName,\n            userName: userName,\n            email: userEmail,\n            password:loginPassword,\n            confirmpassword: confirmPassword,\n            jwtToken: localStorage.accessToken \n        };\n    \n        var js = JSON.stringify(obj);\n    \n        var config = {\n            method: 'post',\n            url: 'https://rate-my-city.herokuapp.com/api/settings',\n            headers: { 'Content-Type': 'application/json' },\n            data: js\n        };\n    \n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error && res.error !== '') {\n                    setMessage(res.error);\n                } else {\n                    setMessage('');\n                    returnFromSettigs(res);\n                }\n            })\n    }\n\n    function returnFromSettigs(result) {\n        localStorage.setItem('accessToken', result.jwtToken.accessToken);\n        localStorage.setItem('userId', result.id);\n        localStorage.setItem('userFirstName', result.firstName);\n        localStorage.setItem('userLastName', result.lastName);\n        localStorage.setItem('userName', result.userName);\n        localStorage.setItem('userEmail', result.email);\n        localStorage.setItem('userPassword', loginPassword);\n        \n        history.push(\"/\");\n    }\n\n    const validatePassword = (e) => {\n        if (validator.isStrongPassword(e, {\n          minLength: 8,\n          minLowercase: 1,\n          minUppercase: 1,\n          minNumbers: 1,\n          minSymbols: 1\n        })) {\n            setMessage('')\n        } else {\n            setMessage('The password in not strong enough')\n        }\n    }\n\n    function handleClickCancel() {\n        history.push(\"/\");\n    }\n\n\n    return(\n        <div className=\"container-fluid h-custom\">\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n                    <form >\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '8vh'}}>\n                            <h1>Settings</h1>\n                        </div>\n\n                        <div className=\"form-outline mt-4 mb-2\">\n                            <input type=\"text\" autoFocus \n                                className=\"form-control form-control-lg\" \n                                value={firstName}\n                                onChange={(e) => {setFirstName(e.target.value)}}\n                                placeholder=\"Enter First Name\" \n                            />\n                            <label className=\"form-label\">First Name</label>\n                        </div>\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={lastName}\n                                onChange={(e) => {setLastName(e.target.value)}}\n                                placeholder=\"Enter Last Name\" \n                            />\n                            <label className=\"form-label\">Last Name</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={userName}\n                                onChange={(e) => {setUserName(e.target.value)}}\n                                placeholder=\"Enter User Name\"\n                            />\n                            <label className=\"form-label\">Username</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"password\" \n                                className=\"form-control form-control-lg\" \n                                value={oldPassword}\n                                onChange={(e) => {setOldPassword(validatePassword(e.target.value))}}\n                                placeholder=\"Enter Old Password\" \n                            />\n                            <label className=\"form-label\">Old Password</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"password\" \n                                className=\"form-control form-control-lg\" \n                                value={loginPassword}\n                                onChange={(e) => {setLoginPassword(validatePassword(e.target.value))}}\n                                placeholder=\"Enter New Password\" \n                            />\n                            <label className=\"form-label\">New Password</label>\n                        </div>\n                        <div className=\"form-outline mb-3\">\n                            <input type=\"password\" \n                                className=\"form-control form-control-lg\" \n                                value={confirmPassword}\n                                onChange={(e) => {setConfirmPassword(validatePassword(e.target.value))}}\n                                placeholder=\"Confirm password\"\n                            />\n                            <label className=\"form-label\">Confirm Password</label>\n                        </div>\n\n\n                        <div className=\"form-group row d-flex justify-content-center \">\n                            <div className=\"col-md-4\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg form-control\" onClick={doSettings}>Update</button>\n                            </div>\n\n                            <div className=\"col-md-4\">\n                                <button type=\"button\" className=\"btn btn-dark btn-lg form-control\" onClick={handleClickCancel}>Cancel</button>\n                            </div>\n\n                            <div className=\"divider d-flex align-items-center my-4\">\n                                <p className=\"text-center fw-bold mx-3 mb-1\">{message}</p>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default Settings;","import React from 'react';\n// import PageTitle from '../components/PageTitle';\n// import LoggedInName from '../components/LoggedInName';\n// import CardUI from '../components/CardUI';\n// import LoginRegister from '../components/Login';\n// import SearchCity from '../components/SearchCity';\n// import AddCity from '../components/AddCity';\nimport Settings from '../components/Settings';\n\n\nconst SettingsPage = () =>\n    {\n        return(\n\n            <div className = \"container\">\n\n                <Settings/>\n\n            </div>\n        );\n    };\nexport default SettingsPage;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport '../App.css';\n\nfunction AddReview() {\n\n    const [cityName, setCityName] = useState(localStorage.cityReview);\n    const [stateName, setStateName] = useState(localStorage.stateReview);\n    const [review, setReview] = useState(localStorage.commentReview);\n    var rates = JSON.parse(localStorage.ratingsReview);\n    const [ratingEnt, setRatingEnt] = useState('' + rates.entertainment);\n    const [ratingNat, setRatingNat] = useState('' + rates.nature);\n    const [ratingCos, setRatingCos] = useState('' + rates.cost);\n    const [ratingSaf, setRatingSaf] = useState('' + rates.safety);\n    const [ratingCul, setRatingCul] = useState('' + rates.culture);\n    const [ratingTra, setRatingTra] = useState('' + rates.transportation);\n    const [ratingFoo, setRatingFoo] = useState('' + rates.food);\n\n    const radios = [\n        { name: '1', value: '1' },\n        { name: '2', value: '2' },\n        { name: '3', value: '3' },\n        { name: '4', value: '4' },\n        { name: '5', value: '5' }\n    ];\n\n    const history = useHistory();\n    const [message, setMessage] = useState('');\n\n    const updateReview = async event => {\n        event.preventDefault();\n\n        // Edit Review\n        var obj = { \n            email:localStorage.userEmail,\n            city:localStorage.cityReview,\n            state:localStorage.stateReview,\n            rating:{\n                entertainment:ratingEnt,\n                nature:ratingNat,\n                cost:ratingCos,\n                safety:ratingSaf,\n                culture:ratingCul,\n                transportation:ratingTra,\n                food:ratingFoo},\n            review:review,\n            jwtToken:localStorage.accessToken};\n        var js = JSON.stringify(obj);\n\n        var config = {\n            method: 'post',\n            url: 'https://rate-my-city.herokuapp.com/api/editRating',\n            // url: 'https://jsonplaceholder.typicode.com/posts',\n            headers: { 'Content-Type': 'application/json' },\n            data: js\n        };\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error) {\n                    setMessage(res.error);\n                } else {\n                    setMessage('');\n                    returnFromEditCity(res);\n                }\n            })\n    }\n\n    function returnFromEditCity(result) {\n        localStorage.setItem('accessToken', result.jwtToken.accessToken);\n        localStorage.setItem('cityReview', '');\n        localStorage.setItem('stateReview', '');\n        localStorage.setItem('commentReview', '');\n        localStorage.setItem('ratingReview', '');\n        history.push(\"/\");\n    }\n\n    function handleClickCancel() {\n        localStorage.setItem('cityReview', '')\n        localStorage.setItem('stateReview', '')\n        localStorage.setItem('commentReview', '');\n        localStorage.setItem('ratingReview', '');\n        history.push(\"/\");\n    }\n\n\n    return(\n        <div className=\"container-fluid h-custom mt-0\">\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n                    <form >\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '8vh'}}>\n                            <h1>Edit Review</h1>\n                        </div>\n\n                        <div className=\"divider d-flex align-items-center mt-0 my-4\">\n                            <p className=\"text-center fw-bold mx-3 mb-3\"></p>\n                        </div>\n                        <div className=\"form-outline mt-1 mb-2\">\n                            <input type=\"text\" autoFocus \n                                className=\"form-control form-control-lg\" \n                                value={cityName}\n                                onChange={(e) => {setCityName(e.target.value)}}\n                                readOnly\n                            />\n                            <label className=\"form-label\">City</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={stateName}\n                                onChange={(e) => {setStateName(e.target.value)}}\n                                readOnly\n                            />\n                            <label className=\"form-label\">State</label>\n                        </div>\n\n                        <div className=\"form-outline mb-3\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={review}\n                                onChange={(e) => {setReview(e.target.value)}}\n                                placeholder=\"Enter your review\" \n                            />\n                            <label className=\"form-label\">Enter Comment.  (Max. 250 characters)</label>\n                        </div>\n\n                        <div className=\"div-table\">\n                            <table className=\"inline-table\">\n                                <tr>\n                                    <td>Entertainment:&nbsp;</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio1-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark '}\n                                                name=\"radio1\"\n                                                value={radio.value}\n                                                checked={ratingEnt === radio.value}\n                                                onChange={(e) => setRatingEnt(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td>Nature :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio2-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio2\"\n                                                value={radio.value}\n                                                checked={ratingNat === radio.value}\n                                                onChange={(e) => setRatingNat(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td>Cost :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio3-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio3\"\n                                                value={radio.value}\n                                                checked={ratingCos === radio.value}\n                                                onChange={(e) => setRatingCos(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td>Safety :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio4-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio4\"\n                                                value={radio.value}\n                                                checked={ratingSaf === radio.value}\n                                                onChange={(e) => setRatingSaf(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Culture :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio5-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio5\"\n                                                value={radio.value}\n                                                checked={ratingCul === radio.value}\n                                                onChange={(e) => setRatingCul(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Transportation:&nbsp;&nbsp;&nbsp; </td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio6-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio6\"\n                                                value={radio.value}\n                                                checked={ratingTra === radio.value}\n                                                onChange={(e) => setRatingTra(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Food: </td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio7-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio7\"\n                                                value={radio.value}\n                                                checked={ratingFoo === radio.value}\n                                                onChange={(e) => setRatingFoo(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n\n                        <div className=\"form-group row d-flex justify-content-center mt-4\">\n                            <div className=\"col-md-4\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg align-items-center\" onClick={updateReview}>Update</button>\n                            </div>\n\n                            <div className=\"col-md-4\">\n                                <button type=\"button\" className=\"btn btn-dark btn-lg align-items-center\" onClick={handleClickCancel}>Cancel</button>\n                            </div>\n\n                            <div className=\"divider d-flex align-items-center mt-1 my-4\">\n                                <p className=\"text-center fw-bold mx-3 mb-5\">{message}</p>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default AddReview;","import React from 'react';\nimport EditReview from '../components/EditReview.js';\n\n\nconst EditReviewPage = () => {\n\n    return(\n\n        <div className = \"container\">\n\n            <EditReview/>\n\n        </div>\n    );\n};\n\nexport default EditReviewPage;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport parametersURL from 'query-string';\nimport validator from 'validator';\n\nclass ResetPassWord extends Component {\n\n    constructor(props) {\n        super(props)\n        \n\n        this.state = {\n            emailToken: '',\n            loginPassword: '',\n            confirmPassword: '',\n            message:''\n        }\n        this.doResetPassword = this.doResetPassword.bind(this);\n        this.getEmailToken = this.getEmailToken.bind(this);\n        this.onChangeLoginPassword = this.onChangeLoginPassword.bind(this);\n        this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n        this.validatePassword = this.validatePassword.bind(this);\n    }\n\n    validatePassword(pass) {\n        if (validator.isStrongPassword(pass, {\n        minLength: 8,\n        minLowercase: 1,\n        minUppercase: 1,\n        minNumbers: 1,\n        minSymbols: 1\n        })) {\n            this.setState({\n                message: ''\n            })\n            return(true);\n        } else {\n            this.setState({\n                message: 'The password in not strong enough'\n            })\n            return(false);\n        }\n    }\n  \n    getEmailToken() {\n        const value = parametersURL.parse(this.props.location.search);\n        return value.emailToken;\n    }\n\n    onChangeLoginPassword(e) {\n        this.setState({\n            loginPassword: e.target.value\n        });\n    }\n\n    onChangeConfirmPassword(e) {\n        this.setState({\n            confirmPassword: e.target.value\n        });\n    }\n\n    componentDidMount() {\n\n    }\n\n    doResetPassword() {\n\n        if (this.state.loginPassword === this.state.confirmPassword) {\n\n            if (this.validatePassword(this.state.loginPassword ) && this.validatePassword(this.state.confirmPassword)) {\n\n                this.obj = { \n                    emailToken: this.getEmailToken(),\n                    password: this.state.loginPassword,\n                    confirmpassword: this.state.confirmPassword\n                };\n\n                this.js = JSON.stringify(this.obj);\n\n                this.config = {\n                    method: 'post',\n                    url: 'https://rate-my-city.herokuapp.com/ResetPwd',\n                    headers: { 'Content-Type': 'application/json' },\n                    data: this.js\n                };\n\n                axios(this.config)\n                    .then(response => {\n                        var res = response.data;\n                        if (res.message) {\n                            this.setState({\n                                message: res.message\n                            });\n                        } else {\n                            this.setState({\n                                message: res.message,\n                            });\n                            this.returnFromReset();\n                        }\n                })\n            }\n        } else {\n            this.setState({\n                message: 'Passwords Not Matching!'\n            })\n        }\n    }\n\n    returnFromReset() {\n        localStorage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    handleClickCancel() {\n        localStorage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    render () {\n        return (\n            <div className=\"container-fluid h-custom\">\n              <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                <div className=\"mt-5 col-xl-4\">\n                  <form >\n        \n                    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '8vh'}}>\n                        <h1>Reset Password</h1>\n                    </div>\n        \n                    <div className=\"divider d-flex align-items-center my-4 mt-0\">\n                      <p className=\"text-center fw-bold mx-3 mb-4\"></p>\n                    </div>\n\n                    <div className=\"form-outline mb-2\">\n                        <input type=\"password\" autoFocus\n                            className=\"form-control form-control-lg\" \n                            value={this.state.loginPassword}\n                            onChange={this.onChangeLoginPassword}\n                            placeholder=\"Enter New Password\" \n                        />\n                        <label className=\"form-label\">New Password</label>\n                    </div>\n                    <div className=\"form-outline mb-3\">\n                        <input type=\"password\" \n                            className=\"form-control form-control-lg\" \n                            value={this.state.confirmPassword}\n                            onChange={this.onChangeConfirmPassword}\n                            placeholder=\"Confirm password\"\n                        />\n                        <label className=\"form-label\">Confirm Password</label>\n                    </div>\n        \n                    <div className=\"form-group row d-flex justify-content-center \">\n                        <div className=\"col-md-4\">\n                            <button type=\"button\" className=\"btn btn-secondary btn-lg form-control\" onClick={this.doResetPassword}>Update</button>\n                        </div>\n        \n                        <div className=\"col-md-4\">\n                            <button type=\"button\" className=\"btn btn-dark btn-lg form-control\" onClick={this.handleClickCancel}>Cancel</button>\n                        </div>\n        \n                        <div className=\"divider d-flex align-items-center my-4\">\n                            <p className=\"text-center fw-bold mx-3 mb-1\">{this.state.message}</p>\n                        </div>\n                    </div>\n        \n                  </form>\n                </div>\n              </div>\n            </div>\n        \n        );\n    }\n}\n\nexport default withRouter(ResetPassWord);","import React from 'react';\nimport ResetPassword from '../components/ResetPassword.js';\n\n\nconst ResetPasswordPage = () => {\n\n    return(\n\n        <div className = \"container\">\n\n            <ResetPassword/>\n\n        </div>\n    );\n};\n\nexport default ResetPasswordPage;","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './pages/LoginPage';\nimport MainPage from './pages/MainPage';\nimport AddCityStatePage from './pages/AddCityStatePage';\nimport AddReviewPage from './pages/AddReviewPage';\nimport SettingsPage from './pages/SettingsPage';\nimport EditReviewPage from './pages/EditReviewPage';\nimport ResetPasswordPage from './pages/ResetPasswordPage.js';\n\n\nfunction App() {\n    return (\n        <Router >\n            <Switch>\n                <Route path=\"/ResetPwd\" exact>\n                    <ResetPasswordPage />\n                </Route>\n                <Route path=\"/login\" exact>\n                    <LoginPage />\n                </Route>\n                <Route path=\"/AddCity\" exact>\n                    <AddCityStatePage />\n                </Route>\n                <Route path=\"/AddReview\" exact>\n                    <AddReviewPage />\n                </Route>\n                <Route path=\"/EditReview\" exact>\n                    <EditReviewPage />\n                </Route>\n                <Route path=\"/Settings\" exact>\n                    <SettingsPage />\n                </Route>\n                \n                <Route path=\"/\" exact>\n                    <MainPage />\n                </Route>\n\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n    );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}