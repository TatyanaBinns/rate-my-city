{"version":3,"sources":["components/Login.js","pages/LoginPage.js","components/PageTitle.js","components/TopBorder.js","components/SearchCity.js","components/ShowReviews.js","pages/MainPage.js","components/AddCityState.js","pages/AddCityStatePage.js","components/AddReview.js","pages/AddReviewPage.js","components/Settings.js","pages/SettingsPage.js","components/EditReview.js","pages/EditReviewPage.js","App.js","index.js"],"names":["Login","history","useHistory","React","useState","show","toggle","firstName","lastName","emailAddress","userName","loginPassword","confirmPassword","message","setMessage","validatePassword","e","validator","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","doLogin","event","a","preventDefault","obj","email","value","password","js","JSON","stringify","config","method","url","headers","data","axios","then","response","res","error","returnFromLogin","doRegister","confirmpassword","returnFromRegister","result","localStorage","setItem","accessToken","id","push","clear","className","type","onClick","autoFocus","placeholder","ref","c","onChange","target","isEmail","validateEmail","href","window","location","LoginPage","PageTitle","style","display","justifyContent","alignItems","height","TopBorder","userFullName","buttonLabel","validUsr","userFirstName","userLastName","disabled","reload","SearchCity","showOptions","setShowOptions","cities","setCities","states","setStates","userNames","setUserNames","citySel","setCitySel","stateSel","setStateSel","userNameSel","setUserNameSel","filterBy","option","state","selected","length","label","toLowerCase","indexOf","text","useEffect","map","name","fillDropdowns","ToggleButton","isOpen","onMouseDown","options","selectedOpt","isMenuShown","toggleMenu","ShowReviews","props","reviews","routerChange","bind","deleteReview","cty","ste","this","confirm","userEmail","city","jwtToken","setState","rev","rat","axiosUrl","userNameSelected","citySelected","stateSelected","rec","parseFloat","averageRating","cost","toFixed","nature","culture","safety","entertainment","transportation","food","ratings","rate","i","userdetails","dateFormat","time","format","editReview","description","rating","Component","withRouter","MainPage","AddCityState","cityName","setCityName","stateName","setStateName","addCity","country","returnFromAddCity","AddCityStatePage","AddReview","cityReview","pageTitle","stateReview","review","setReview","ratingEnt","setRatingEnt","ratingNat","setRatingNat","ratingCos","setRatingCos","ratingSaf","setRatingSaf","ratingCul","setRatingCul","ratingTra","setRatingTra","ratingFoo","setRatingFoo","radios","addReview","userid","userId","readOnly","ButtonGroup","radio","idx","variant","checked","currentTarget","AddReviewPage","Settings","setFirstName","setLastName","setUserName","userPassword","oldPassword","setOldPassword","setLoginPassword","setConfirmPassword","doSettings","returnFromSettigs","SettingsPage","commentReview","rates","parse","ratingsReview","updateReview","returnFromEditCity","EditReviewPage","EditReview","App","path","exact","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.520546a9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport validator from 'validator';\nimport '../App.css';\n\nfunction Login() {\n\n  const history = useHistory();\n  const [show, toggle] = React.useState(false);\n  const ToggleShow = () => toggle(true);\n  const ToggleHide = () => toggle(false);\n\n  var firstName = '';\n  var lastName = '';  \n  var emailAddress = '';\n  var userName = '';\n  var loginPassword = '';\n  var confirmPassword = '';\n\n  function handleClickCancel() {\n      localStorage.clear();\n      history.push(\"/\");\n  }\n\n  const [message, setMessage] = useState('');\n\n  const validateEmail = (e) => {\n    var email = e.target.value\n    if (validator.isEmail(email)) {\n      setMessage('')\n    } else {\n        setMessage('The email is not Valid')\n    }\n  }\n\n  const validatePassword = (e) => {\n    if (validator.isStrongPassword(e, {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1\n    })) {\n        setMessage('')\n    } else {\n        setMessage('The password in not strong enough')\n    }\n  }\n\n  const doLogin = async event => {\n      event.preventDefault();\n\n      var obj = { email:emailAddress.value, password:loginPassword.value };\n      var js = JSON.stringify(obj);\n\n      var config = {\n          method: 'post',\n          url: 'https://rate-my-city.herokuapp.com/api/login',\n          // url: 'https://jsonplaceholder.typicode.com/users',\n          headers: { 'Content-Type': 'application/json' },\n          data: js\n      };\n\n      axios(config)\n          .then(function (response) {\n              var res = response.data;\n              if (res.error) {\n                  setMessage(res.error);\n              } else {\n                  returnFromLogin(res);\n              }\n          })\n\n  }\n\n  const doRegister = async event => {\n    if (message === '') {\n\n      event.preventDefault();\n\n      var obj = { \n          firstName: firstName.value,\n          lastName: lastName.value,\n          userName: userName.value,\n          email:emailAddress.value, \n          password:loginPassword.value,\n          confirmpassword: confirmPassword.value \n      };\n\n      var js = JSON.stringify(obj);\n\n      var config = {\n          method: 'post',\n          url: 'https://rate-my-city.herokuapp.com/api/register',\n          // url: 'https://jsonplaceholder.typicode.com/posts',\n          headers: { 'Content-Type': 'application/json' },\n          data: js\n      };\n\n      axios(config)\n          .then(function (response) {\n              var res = response.data;\n              if (res.error && res.error !== '') {\n                  setMessage(res.error);\n              } else {\n                  returnFromRegister(res);\n              }\n          })\n    }\n  }\n\n  function doForgot() {\n    window.location.href='https://ibm.com';\n  }\n\n  function returnFromLogin(result) {\n      localStorage.setItem('accessToken', result.accessToken);\n      localStorage.setItem('userId', result.id);\n      localStorage.setItem('userFirstName', result.firstName);\n      localStorage.setItem('userLastName', result.lastName);\n      localStorage.setItem('userName', result.userName);\n      localStorage.setItem('userEmail', emailAddress.value);\n      localStorage.setItem('userPassword', loginPassword.value);\n      history.push(\"/\");\n  }\n\n  function returnFromRegister(result) {\n      localStorage.clear();\n      history.push(\"/\");\n  }\n\n\n  return(\n    <div className=\"container-fluid h-custom\">\n      <div className=\"row d-flex justify-content-center align-items-center h-100\">\n        <div className=\"col-md-8 col-lg-6 mt-3 col-xl-4 offset-xl-1\">\n          <form >\n            <div className=\"form-group row d-flex justify-content-center\">\n              <div className=\"col-md-4\">\n                <button type=\"button\" className=\"btn text-white btn-lg fw-bold btn-outline-dark btn-secondary\" onClick={ToggleHide}>Login</button>\n              </div>\n              <div className=\"col-md-4\">\n                <button type=\"button\" className=\"btn text-white btn-lg fw-bold btn-outline-dark btn-secondary\" onClick={ToggleShow}>Register</button>\n              </div>\n            </div>\n            \n            <div className=\"divider d-flex align-items-center my-4 mt-0\">\n              <p className=\"text-center fw-bold mx-3 mb-4\"></p>\n            </div>\n\n            {show &&\n              <div className=\"form-outline mt-0 mb-2\">\n                <input type=\"text\" autoFocus \n                    className=\"form-control\" \n                    placeholder=\"Enter First Name\" \n                    ref={(c) => firstName = c} />\n                <label className=\"form-label\">First Name</label>\n              </div>\n            }\n            {show &&\n              <div className=\"form-outline mt-3 mb-2\">\n                <input type=\"text\" \n                    className=\"form-control\" \n                    placeholder=\"Enter Last Name\" \n                    ref={(c) => lastName = c} />\n                <label className=\"form-label\">Last Name</label>\n              </div>\n            }\n\n            {show &&\n              <div className=\"form-outline mt-3 mb-2\">\n                <input type=\"text\" \n                      className=\"form-control\" \n                      placeholder=\"Enter User Name\"\n                      ref={(c) => userName = c} />\n                <label className=\"form-label\">User Name</label>\n              </div>\n            }\n\n            <div className=\"form-outline mt-3 mb-2\">\n              <input type=\"email\" autoFocus \n                  className=\"form-control form-control-lg\" \n                  placeholder=\"Enter a valid email address\" \n                  ref={(c) => emailAddress = c} \n                  onChange={(e) => validateEmail(e)}/>\n              <label className=\"form-label\">Email Address</label>\n            </div>\n\n            <div className=\"form-outline my-3 mb-2\">\n              <input type=\"password\" \n                  className=\"form-control form-control-lg\" \n                  placeholder=\"Enter password\" \n                  ref={(c) => loginPassword = c}\n                  onChange={(e) => validatePassword(e.target.value)} />\n              <label className=\"form-label\">Password</label>\n            </div>\n            {show &&\n              <div className=\"form-outline mt-3 mb-2\">\n                <input type=\"password\" \n                    className=\"form-control\" \n                    placeholder=\"Confirm password\"\n                    ref={(c) => confirmPassword = c}\n                    onChange={(e) => validatePassword(e.target.value)} />\n                <label className=\"form-label\">Confirm password</label>\n              </div>\n            }\n\n            <div className=\"form-group row d-flex justify-content-center \">\n              {!show && \n                <div className=\"col-md-4\">\n                  <button type=\"button\" className=\"btn text-white btn-lg fw-bold btn-outline-dark btn-secondary\" onClick={doLogin}>Sign In</button>\n                </div>\n              }\n              {show && \n                <div className=\"col-md-4\">\n                  <button type=\"button\" className=\"btn text-white btn-lg fw-bold btn-outline-dark btn-secondary\" onClick={doRegister}>Sign In</button>\n                </div>\n              }\n\n              <div className=\"col-md-4\">\n                <button type=\"button\" className=\"btn btn-dark btn-lg fw-bold form-control\" onClick={handleClickCancel}>Cancel</button>\n              </div>\n            </div>\n\n            {!show && \n              <div className=\"d-flex justify-content-center align-items-center mt-4\">\n                <a className=\"link-line\" href=\"#\" onClick={() => doForgot()}>Forgot Password ?</a>\n              </div>\n            }\n\n            <div className=\"divider d-flex align-items-center my-4\">\n              <p className=\"text-center fw-bold mx-3 mb-1\">{message}</p>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default Login;","import React from 'react';\nimport LoginRegister from '../components/Login';\n\n\nconst LoginPage = () =>\n{\n    return(\n\n        <div className = \"container\">\n\n            <LoginRegister />\n\n            </div>\n    );\n};\nexport default LoginPage;\n","import React from 'react';\nfunction PageTitle()\n{\n  return(\n    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '10vh'}}>\n      <h1>Rate My City</h1>\n    </div>\n  );\n};\nexport default PageTitle;\n","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { DropdownButton } from 'react-bootstrap';\nimport { Dropdown, Button, Modal } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\n\nfunction MyVerticallyCenteredModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Rate My City\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <h4>Centered Modal</h4>\n        <p>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\n          consectetur ac, vestibulum at eros.\n        </p>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n\n    </Modal>\n  );\n}\n\n\nfunction TopBorder()\n{\n\n  \n\n    // const [modalShow, setModalShow] = React.useState(false);\n    const history = useHistory();\n\n    var userFullName = '';\n    var buttonLabel = 'Login / Register';\n    var validUsr = false;\n    if ( localStorage.accessToken && localStorage.accessToken !== '' ) {\n        userFullName = \"Welcome: \" + localStorage.userFirstName + ' ' + localStorage.userLastName;\n        validUsr = true;\n        buttonLabel = 'Logout'\n    }\n\n    const [show, toggle] = React.useState(validUsr);\n    const ToggleShow = () => toggle(validUsr);\n\n\n    function handleClick() {\n        if ( localStorage.accessToken && localStorage.accessToken !== '' ) {\n            userFullName = '';\n            localStorage.clear();\n            window.location.reload(false);\n            \n        } else {\n            history.push(\"/login\");\n        }\n    }\n\n    function handleClickCity () {\n        history.push(\"AddCity\")\n    }\n\n    function handleClickSettings() {\n        history.push(\"/Settings\")\n    }\n\n\n    return(\n      <div className=\"container-fluid h-custom mt-5\">\n        <p>&nbsp;</p>\n        <div className=\"input-group mt-1 mb-2\">\n\n          {/* {show &&\n            <div>\n              <DropdownButton className=\"input-group-append icon-play\" id=\"dropdown-basic-button\" size=\"sm\" variant=\"Secondary\" menuVariant=\"secondary\">\n                <Dropdown.Item className=\"btn-group-sm\" href=\"#/action-1\" onClick={handleClickCity}>Add City</Dropdown.Item>\n              </DropdownButton>\n            </div>\n          } */}\n          \n\n          <input className=\"form-control text-left fw-bold\" disabled=\"disabled\" placeholder={userFullName} />\n\n          <div className=\"input-group-append\" >\n              <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={handleClick}>{buttonLabel}</button>\n          </div>\n\n\n          {show &&\n            <div className=\"input-group-append\">\n              <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={handleClickSettings}>Settings</button>\n            </div>\n          }\n\n\n          {/* <div className=\"input-group-append\" >\n              <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={() => setModalShow(true)}>Add City</button>\n          </div>\n          <MyVerticallyCenteredModal\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n          /> */}\n\n        </div>\n      </div>\n\n    );\n};\n\nexport default TopBorder; \n","import React, { Component, useState, useEffect } from 'react';\nimport { Dropdown, Button, Modal } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../App.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\n\n\nfunction SearchCity() {\n\n    const [showOptions, setShowOptions] = useState(false);\n    const [message, setMessage] = useState('');\n    const [cities, setCities] = useState({});\n    const [states, setStates] = useState({});\n    const [userNames, setUserNames] = useState({});\n    const history = useHistory();\n    const [citySel, setCitySel] = useState('');\n    const [stateSel, setStateSel] = useState('');\n    const [userNameSel, setUserNameSel] = useState('');\n    \n\n    useEffect(() => {\n        if ( localStorage.accessToken && localStorage.accessToken !== '' ) {\n            setShowOptions(true);\n        }\n        localStorage.setItem(\"citySelected\", '');\n        localStorage.setItem(\"stateSelected\", '');\n        localStorage.setItem(\"userNameSelected\", '');\n        fillDropdowns();\n    }, [])\n\n\n\n    function filterBy(option, state) {\n      if (state.selected.length) {\n          return true;\n      }\n      return option.label.toLowerCase().indexOf(state.text.toLowerCase()) > -1;\n    }\n\n    function citySelected(selectedOpt) {\n        setCitySel(selectedOpt[0].label);\n    }\n\n    function stateSelected(selectedOpt) {\n        setStateSel(selectedOpt[0].label);\n    }\n\n    function userNameSelected(selectedOpt) {\n        setUserNameSel(selectedOpt[0].label);\n    }\n    \n    const ToggleButton = ({ isOpen, onClick }) => (\n      <button\n          className=\"toggle-button\"\n          onClick={onClick}\n          onMouseDown={e => {\n              e.preventDefault();\n          }}>\n          {isOpen ? '▲' : '▼'}\n      </button>\n    );\n      \n    function fillDropdowns() {\n        // Get Cities\n        var config = {\n            method: 'get',\n            url: 'https://rate-my-city.herokuapp.com/api/listCities',\n            // url: 'https://jsonplaceholder.typicode.com/users'\n\n        };\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error) {\n                    setMessage(res.error);\n                } else {\n                    setMessage(res.error);\n                    setCities(res.map(({ name: label }) => ({ label })))\n                    // setCities(res.map(({ username: label }) => ({ label })))\n                }\n            });\n\n        // Get States\n        var config = {\n            method: 'get',\n            url: 'https://rate-my-city.herokuapp.com/api/listStates',\n            // url: 'https://jsonplaceholder.typicode.com/users'\n  \n          };\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error) {\n                    setMessage(res.error);\n                } else {\n                    setMessage(res.error);\n                    setStates(res.map(({ state: label }) => ({ label })))\n                    // setStates(res.map(({ email: label }) => ({ label })))\n                }\n            })\n    \n        // Get Users\n        var config = {\n            method: 'get',\n            url: 'https://rate-my-city.herokuapp.com/api/listUserName',\n            // url: 'https://jsonplaceholder.typicode.com/users'\n\n        };\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error) {\n                    setMessage(res.error);\n                } else {\n                    setMessage(res.error);\n                    setUserNames(res.map(({ userName: label }) => ({ label })))\n                    // setUserNames(res.map(({ name: label }) => ({ label })))\n                }\n            })\n    }\n\n    function handleClickCity () {\n        localStorage.setItem(\"cityReview\", '');\n        localStorage.setItem(\"stateReview\", '');\n        history.push(\"AddCity\")\n    }\n\n    function searchReviews () {\n        localStorage.setItem(\"citySelected\", citySel);\n        localStorage.setItem(\"stateSelected\", stateSel);\n        localStorage.setItem(\"userNameSelected\", userNameSel);\n        history.push(\"ShowReviews\")\n    }\n\n\n    return (\n\n      <div className=\"input-group d-flex justify-content-center\">\n        \n        <div className=\"form-group\">\n            <Typeahead\n                id=\"dropCity\"\n                filterBy={filterBy}\n                options={cities}\n                onChange={citySelected}\n                placeholder=\"Search by City ...\">\n                {({ isMenuShown, toggleMenu }) => (\n                  <ToggleButton isOpen={isMenuShown} onClick={e => toggleMenu()} />\n                )}\n            </Typeahead>\n        </div>\n\n        <div className=\"form-group\">\n            <Typeahead\n                id=\"dropState\"\n                filterBy={filterBy}\n                options={states}\n                onChange={stateSelected}\n                placeholder=\"Search by state ...\">\n                {({ isMenuShown, toggleMenu }) => (\n                  <ToggleButton isOpen={isMenuShown} onClick={e => toggleMenu()} />\n                )}\n            </Typeahead>\n        </div>\n\n        <div className=\"form-group\">\n            <Typeahead\n                id=\"dropUserName\"\n                filterBy={filterBy}\n                options={userNames}\n                onChange={userNameSelected}\n                placeholder=\"Search by User ...\">\n                {({ isMenuShown, toggleMenu }) => (\n                  <ToggleButton isOpen={isMenuShown} onClick={e => toggleMenu()} />\n                )}\n              </Typeahead>\n        </div>\n\n        <div>\n            <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={searchReviews}>Search</button>\n            {showOptions && \n                <button className=\"btn text-white fw-bold btn-outline-dark btn-secondary\" onClick={handleClickCity}>Add City</button>\n            }\n        </div>\n\n        <div>\n            \n            <p>&nbsp;</p>\n        </div>\n\n      </div>\n    )\n\n}\n\nexport default SearchCity; ","import React, { Component, useState, useEffect } from 'react';\nimport { Table, Dropdown, Button, Modal } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../App.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n// import reviews from \"./data.js\"\nimport dateFormat from \"moment\";\nimport thumbsup from '../thumbs-up.png';\n\n\n\nclass ShowReviews extends Component {\n\n    \n\n    constructor(props) {\n        super(props)\n        this.state = {\n            reviews:[],\n            message:'',\n            showOptions:localStorage.accessToken ? true : false\n        }\n        this.routerChange = this.routerChange.bind(this);\n        this.deleteReview = this.deleteReview.bind(this);\n\n    }\n    \n\n    routerChange(cty, ste) {\n        localStorage.setItem(\"cityReview\", cty);\n        localStorage.setItem(\"stateReview\", ste);\n        this.props.history.push(\"/AddReview\");\n    };\n\n    deleteReview(cty, ste) {\n\n        if ( window.confirm('Are you sure you want to delete this review?')) {\n            this.obj = { \n                email:localStorage.userEmail,\n                city:cty,\n                jwtToken:localStorage.accessToken};\n            this.js = JSON.stringify(this.obj);\n    \n            this.config = {\n                method: 'post',\n                url: 'https://rate-my-city.herokuapp.com/api/delete',\n                headers: { 'Content-Type': 'application/json' },\n                data: this.js\n            };\n    \n            axios(this.config)\n                .then(response => {\n                    var res = response.data;\n                    if (res.error) {\n                        this.setState({\n                            message: res.error\n                        });\n                    } else {\n                        this.setState({\n                            message: ''\n                        });\n                        localStorage.accessToken = res.jwtToken.accessToken;\n                        window.location.reload(false);\n\n                    }\n                })\n        } \n    }\n\n    editReview(cty,ste,rev, rat) {\n        localStorage.setItem(\"cityReview\", cty);\n        localStorage.setItem(\"stateReview\", ste);\n        localStorage.setItem(\"commentReview\", rev);\n        localStorage.setItem(\"ratingsReview\", rat);\n        this.props.history.push(\"/EditReview\");\n    }\n    \n    componentDidMount() {\n        this.axiosUrl = 'https://rate-my-city.herokuapp.com/api/';\n\n        if ( !localStorage.userNameSelected) {\n            this.axiosUrl += 'searchCityState';\n        } else {\n            this.axiosUrl += 'searchUsername';\n        }\n\n        this.obj = { \n            city:localStorage.citySelected,\n            state:localStorage.stateSelected,\n            userName:localStorage.userNameSelected};\n        this.js = JSON.stringify(this.obj);\n\n        this.config = {\n            method: 'post',\n            url: this.axiosUrl,\n            headers: { 'Content-Type': 'application/json' },\n            data: this.js\n        };\n\n        axios(this.config)\n            .then(response => {\n                var res = response.data;\n                if (res.error) {\n                    this.setState({\n                        message: res.error\n                    });\n                } else {\n                    this.setState({\n                        message: '',\n                        reviews: res\n                    });\n                }\n            })\n    }\n\n    render () {\n        const {reviews} = this.state;\n        const {showOptions} = this.state;\n        return (\n            <body>\n                <div className=\"container input-group justify-content-center\">\n                    <table className=\"master-table\">\n                    {\n                        reviews.map((rec => \n                            <>\n\n                            <tr className=\"city-separator\">\n                                <td>\n                                    <span className=\"city-state\">\n                                        {rec.name}, &nbsp;&nbsp; {rec.state}\n                                    </span>\n                                </td>\n                                {showOptions && \n                                    <td>\n                                        <span>\n                                            <button className=\"btn fw-bold btn-secondary\" onClick={() => this.routerChange(rec.name, rec.state)} type=\"button\">Add Review</button>\n                                        </span>\n                                    </td>\n                                }\n                            </tr>\n                            <div className=\"row justify-content-center\">\n                                <div className=\"\">\n                                    <table className=\"table table-responsive mb-1 mt-0\">\n                                        <tr className=\"rating-avg\">\n                                            <td>Cost:</td>\n                                            <td>{parseFloat(rec.averageRating.cost).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Nature:</td>\n                                            <td>{parseFloat(rec.averageRating.nature).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Culture:</td>\n                                            <td>{parseFloat(rec.averageRating.culture).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Safety:</td>\n                                            <td>{parseFloat(rec.averageRating.safety).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Entertaiment:</td>\n                                            <td>{parseFloat(rec.averageRating.entertainment).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Transportation:</td>\n                                            <td>{parseFloat(rec.averageRating.transportation).toFixed(1)}</td>\n                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                            <td>Food:</td>\n                                            <td>{parseFloat(rec.averageRating.food).toFixed(1)}</td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n\n                            <div>\n                                {rec.ratings.map(function (rate, i) {\n                                    return <form key={i} className=\"box\">\n                                        <div>\n                                            <div className=\"line-delete\">\n                                                <span className=\"user\">\n                                                    <span className=\"usr-name\"><u>{rate.userdetails.userName}</u>&nbsp;&nbsp;</span> \n                                                    <span className=\"time-stamp\">wrote in {dateFormat(rate.time).format('MM-DD-YYYY @ hh:mm A')}:</span>\n                                                </span>\n                                                {rate.userdetails.userName === localStorage.userName &&\n                                                    <div>\n\n                                                        <span className=\"action\">\n                                                            <button className=\"delete-button\" onClick={() => this.editReview(rec.name, rec.state, rate.description, JSON.stringify(rate.rating))} type=\"button\">Edit</button>&nbsp;\n                                                            <button className=\"delete-button\" onClick={() => this.deleteReview(rec.name, rec.state)} type=\"button\">Delete</button>\n                                                        </span>\n                                                    </div>\n                                                }\n                                                <div>\n                                                    <div><p>&nbsp;</p></div>\n                                                    <p className=\"rate-comment\">\n                                                        {rate.description} \n                                                        {/* &nbsp;&nbsp;&nbsp; <img src={thumbsup}/> */}\n                                                    </p>\n                                                </div>\n                                            </div>\n                                            \n                                        </div>\n                                        <div className=\"row justify-content-center\">\n                                            <div className=\"\">\n                                                <table className=\"table table-responsive mb-1 mt-0\">\n                                                    <tr className=\"rating-avg2\">\n                                                        {/* <td> */}\n                                                        <td>Cost:</td>\n                                                        <td>{parseFloat(rate.rating.cost).toFixed(1)}</td>\n                                                        {/* </td> */}\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Nature:</td>\n                                                        <td>{parseFloat(rate.rating.nature).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Culture:</td>\n                                                        <td>{parseFloat(rate.rating.culture).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Safety:</td>\n                                                        <td>{parseFloat(rate.rating.safety).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Entertaiment:</td>\n                                                        <td>{parseFloat(rate.rating.entertainment).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Transportation:</td>\n                                                        <td>{parseFloat(rate.rating.transportation).toFixed(1)}</td>\n                                                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                                                        <td>Food:</td>\n                                                        <td>{parseFloat(rate.rating.food).toFixed(1)}</td>\n                                                    </tr>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </form>\n                                }, this)}\n                            </div>\n                            </>\n                        ), this)\n                    }\n                    </table>   \n                </div>\n            </body>\n        );\n    }\n}\n\nexport default withRouter(ShowReviews); ","\nimport React from 'react';\nimport PageTitle from '../components/PageTitle';\nimport TopBorder from '../components/TopBorder';\nimport SearchCity from '../components/SearchCity';\nimport ShowReviews from '../components/ShowReviews';\n\nconst MainPage = () =>\n{\nreturn(\n<div className = \"container\">\n<TopBorder />\n<PageTitle />\n<SearchCity />\n<ShowReviews />\n</div>\n);\n};\nexport default MainPage;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport '../App.css';\n\nfunction AddCityState() {\n\n    const [checked, setChecked] = useState(false);\n    const [cityName, setCityName] = useState('');\n    const [stateName, setStateName] = useState('');\n\n    const history = useHistory();\n    const [message, setMessage] = useState('');\n\n    const addCity = async event => {\n        event.preventDefault();\n\n        var obj = { \n            name:cityName,\n            state:stateName,\n            country:'USA',\n            jwtToken:localStorage.accessToken};\n        var js = JSON.stringify(obj);\n\n        var config = {\n            method: 'post',\n            url: 'https://rate-my-city.herokuapp.com/api/createCity',\n            // url: 'https://jsonplaceholder.typicode.com/posts',\n            headers: { 'Content-Type': 'application/json' },\n            data: js\n        };\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error) {\n                    setMessage(res.error);\n                } else {\n                    setMessage('');\n                    returnFromAddCity(res);\n                }\n            })\n    }\n\n    function returnFromAddCity(result) {\n        localStorage.setItem('accessToken', result.jwtToken.accessToken);\n        history.push(\"/\");\n    }\n\n    function handleClickCancel() {\n        history.push(\"/\");\n    }\n\n\n    return(\n        <div className=\"container-fluid h-custom mt-0\">\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n                    <form >\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '8vh'}}>\n                            <h1>Add City</h1>\n                        </div>\n\n                        <div className=\"divider d-flex align-items-center mt-0 my-4\">\n                            <p className=\"text-center fw-bold mx-3 mb-3\"></p>\n                        </div>\n                        <div className=\"form-outline mt-1 mb-2\">\n                            <input type=\"text\" autoFocus \n                                className=\"form-control form-control-lg\" \n                                value={cityName}\n                                onChange={(e) => {setCityName(e.target.value)}}\n                                placeholder=\"Only enter US city\" \n                            />\n                            <label className=\"form-label\">Enter City</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={stateName}\n                                onChange={(e) => {setStateName(e.target.value)}}\n                                placeholder=\"Only enter US state\" \n                            />\n                            <label className=\"form-label\">Enter State</label>\n                        </div>\n\n                        <div className=\"form-group row d-flex justify-content-center mt-4\">\n                            <div className=\"col-md-3\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg align-items-center\" onClick={addCity}>Add</button>\n                            </div>\n\n                            <div className=\"col-md-3\">\n                                <button type=\"button\" className=\"btn btn-dark btn-lg align-items-center\" onClick={handleClickCancel}>Cancel</button>\n                            </div>\n\n                            <div className=\"divider d-flex align-items-center mt-1 my-4\">\n                                <p className=\"text-center fw-bold mx-3 mb-5\">{message}</p>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default AddCityState;","\nimport React from 'react';\nimport AddCityState from '../components/AddCityState.js';\n\n\nconst AddCityStatePage = () => {\n\n    return(\n\n        <div className = \"container\">\n\n            <AddCityState/>\n\n        </div>\n    );\n};\n\nexport default AddCityStatePage;\n\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport '../App.css';\nimport createUtilityClassName from 'react-bootstrap/esm/createUtilityClasses';\n\nfunction AddReview() {\n\n    const [pageTitle, setPageTitle] = useState(localStorage.cityReview ? 'Add Review' : 'Add City');\n    const [checked, setChecked] = useState(false);\n    const [cityName, setCityName] = useState(localStorage.cityReview);\n    const [stateName, setStateName] = useState(localStorage.stateReview);\n    const [review, setReview] = useState('');\n    const [ratingEnt, setRatingEnt] = useState('0');\n    const [ratingNat, setRatingNat] = useState('0');\n    const [ratingCos, setRatingCos] = useState('0');\n    const [ratingSaf, setRatingSaf] = useState('0');\n    const [ratingCul, setRatingCul] = useState('0');\n    const [ratingTra, setRatingTra] = useState('0');\n    const [ratingFoo, setRatingFoo] = useState('0');\n\n    const radios = [\n        { name: '1', value: '1' },\n        { name: '2', value: '2' },\n        { name: '3', value: '3' },\n        { name: '4', value: '4' },\n        { name: '5', value: '5' }\n    ];\n\n    const history = useHistory();\n    const [message, setMessage] = useState('');\n\n    const addReview = async event => {\n        event.preventDefault();\n\n        // Add Review\n        var obj = { \n            userid:localStorage.userId,\n            email:localStorage.userEmail,\n            city:cityName,\n            state:stateName,\n            rating:{\n                entertainment:ratingEnt,\n                nature:ratingNat,\n                cost:ratingCos,\n                safety:ratingSaf,\n                culture:ratingCul,\n                transportation:ratingTra,\n                food:ratingFoo},\n            review:review,\n            jwtToken:localStorage.accessToken};\n        var js = JSON.stringify(obj);\n\n        var config = {\n            method: 'post',\n            url: 'https://rate-my-city.herokuapp.com/api/addRating',\n            // url: 'https://jsonplaceholder.typicode.com/posts',\n            headers: { 'Content-Type': 'application/json' },\n            data: js\n        };\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error) {\n                    setMessage(res.error);\n                } else {\n                    setMessage('');\n                    returnFromAddCity(res);\n                }\n            })\n    }\n\n    function returnFromAddCity(result) {\n        localStorage.setItem('accessToken', result.jwtToken.accessToken);\n        localStorage.setItem('cityReview', '')\n        localStorage.setItem('stateReview', '')\n        history.push(\"/\");\n    }\n\n    function handleClickCancel() {\n        localStorage.setItem('cityReview', '')\n        localStorage.setItem('stateReview', '')\n        history.push(\"/\");\n    }\n\n\n    return(\n        <div className=\"container-fluid h-custom mt-0\">\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n                    <form >\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '8vh'}}>\n                            <h1>{pageTitle}</h1>\n                        </div>\n\n                        <div className=\"divider d-flex align-items-center mt-0 my-4\">\n                            <p className=\"text-center fw-bold mx-3 mb-3\"></p>\n                        </div>\n                        <div className=\"form-outline mt-1 mb-2\">\n                            {localStorage.cityReview ? \n                                <input type=\"text\" autoFocus \n                                    className=\"form-control form-control-lg\" \n                                    value={cityName}\n                                    onChange={(e) => {setCityName(e.target.value)}}\n                                    placeholder=\"Only enter US city\" \n                                    readOnly\n                                />\n                                :\n                                <input type=\"text\" autoFocus \n                                    className=\"form-control form-control-lg\" \n                                    value={cityName}\n                                    onChange={(e) => {setCityName(e.target.value)}}\n                                    placeholder=\"Only enter US city\" \n                                />\n                            }\n                            <label className=\"form-label\">Enter City</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            {localStorage.cityReview ? \n                                <input type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    value={stateName}\n                                    onChange={(e) => {setStateName(e.target.value)}}\n                                    placeholder=\"Only enter US state\" \n                                    readOnly\n                                />\n                                :\n                                <input type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    value={stateName}\n                                    onChange={(e) => {setStateName(e.target.value)}}\n                                    placeholder=\"Only enter US state\" \n                                />\n                            }\n                            <label className=\"form-label\">Enter State</label>\n                        </div>\n\n                        <div className=\"form-outline mb-3\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={review}\n                                onChange={(e) => {setReview(e.target.value)}}\n                                placeholder=\"Enter your review\" \n                            />\n                            <label className=\"form-label\">Enter Comment.  (Max. 250 characters)</label>\n                        </div>\n\n                        <div className=\"div-table\">\n                            <table className=\"inline-table\">\n                                <tr>\n                                    <td>Entertainment:&nbsp;</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio1-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark '}\n                                                name=\"radio1\"\n                                                value={radio.value}\n                                                checked={ratingEnt === radio.value}\n                                                onChange={(e) => setRatingEnt(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td>Nature :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio2-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio2\"\n                                                value={radio.value}\n                                                checked={ratingNat === radio.value}\n                                                onChange={(e) => setRatingNat(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td>Cost :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio3-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio3\"\n                                                value={radio.value}\n                                                checked={ratingCos === radio.value}\n                                                onChange={(e) => setRatingCos(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td>Safety :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio4-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio4\"\n                                                value={radio.value}\n                                                checked={ratingSaf === radio.value}\n                                                onChange={(e) => setRatingSaf(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Culture :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio5-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio5\"\n                                                value={radio.value}\n                                                checked={ratingCul === radio.value}\n                                                onChange={(e) => setRatingCul(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Transportation:&nbsp;&nbsp;&nbsp; </td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio6-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio6\"\n                                                value={radio.value}\n                                                checked={ratingTra === radio.value}\n                                                onChange={(e) => setRatingTra(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Food: </td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio7-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio7\"\n                                                value={radio.value}\n                                                checked={ratingFoo === radio.value}\n                                                onChange={(e) => setRatingFoo(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n\n                        <div className=\"form-group row d-flex justify-content-center mt-4\">\n                            <div className=\"col-md-3\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg align-items-center\" onClick={addReview}>Add</button>\n                            </div>\n\n                            <div className=\"col-md-3\">\n                                <button type=\"button\" className=\"btn btn-dark btn-lg align-items-center\" onClick={handleClickCancel}>Cancel</button>\n                            </div>\n\n                            <div className=\"divider d-flex align-items-center mt-1 my-4\">\n                                <p className=\"text-center fw-bold mx-3 mb-5\">{message}</p>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default AddReview;","import React from 'react';\nimport AddReview from '../components/AddReview.js';\n\n\nconst AddReviewPage = () => {\n\nreturn(\n\n    <div className = \"container\">\n\n        <AddReview/>\n\n        </div>\n    );\n};\n\nexport default AddReviewPage;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport validator from 'validator';\nimport '../App.css';\n\nfunction Settings() {\n\n    const history = useHistory();\n\n    const [message, setMessage] = useState('');\n    const [firstName, setFirstName] = useState(localStorage.userFirstName);\n    const [lastName, setLastName] = useState(localStorage.userLastName);\n    const [userName, setUserName] = useState(localStorage.userName);\n    const [userEmail, setUserEmail] = useState(localStorage.userEmail);\n    const [oldPassword, setOldPassword] = useState(localStorage.userPassword);\n    const [loginPassword, setLoginPassword] = useState(localStorage.userPassword);\n    const [confirmPassword, setConfirmPassword] = useState(localStorage.userPassword);\n\n    const doSettings= async event => {\n        event.preventDefault();\n    \n        var obj = {\n            userId: localStorage.userId,\n            firstName: firstName,\n            lastName: lastName,\n            userName: userName,\n            email: userEmail,\n            password:loginPassword,\n            confirmpassword: confirmPassword,\n            jwtToken: localStorage.accessToken \n        };\n    \n        var js = JSON.stringify(obj);\n    \n        var config = {\n            method: 'post',\n            url: 'https://rate-my-city.herokuapp.com/api/settings',\n            headers: { 'Content-Type': 'application/json' },\n            data: js\n        };\n    \n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error && res.error !== '') {\n                    setMessage(res.error);\n                } else {\n                    setMessage('');\n                    returnFromSettigs(res);\n                }\n            })\n    }\n\n    function returnFromSettigs(result) {\n        localStorage.setItem('accessToken', result.jwtToken.accessToken);\n        localStorage.setItem('userId', result.id);\n        localStorage.setItem('userFirstName', result.firstName);\n        localStorage.setItem('userLastName', result.lastName);\n        localStorage.setItem('userName', result.userName);\n        localStorage.setItem('userEmail', result.email);\n        localStorage.setItem('userPassword', loginPassword);\n        \n        history.push(\"/\");\n    }\n\n    const validatePassword = (e) => {\n        if (validator.isStrongPassword(e, {\n          minLength: 8,\n          minLowercase: 1,\n          minUppercase: 1,\n          minNumbers: 1,\n          minSymbols: 1\n        })) {\n            setMessage('')\n        } else {\n            setMessage('The password in not strong enough')\n        }\n    }\n\n    function handleClickCancel() {\n        history.push(\"/\");\n    }\n\n\n    return(\n        <div className=\"container-fluid h-custom\">\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n                    <form >\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '8vh'}}>\n                            <h1>Settings</h1>\n                        </div>\n\n                        <div className=\"form-outline mt-4 mb-2\">\n                            <input type=\"text\" autoFocus \n                                className=\"form-control form-control-lg\" \n                                value={firstName}\n                                onChange={(e) => {setFirstName(e.target.value)}}\n                                placeholder=\"Enter First Name\" \n                            />\n                            <label className=\"form-label\">First Name</label>\n                        </div>\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={lastName}\n                                onChange={(e) => {setLastName(e.target.value)}}\n                                placeholder=\"Enter Last Name\" \n                            />\n                            <label className=\"form-label\">Last Name</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={userName}\n                                onChange={(e) => {setUserName(e.target.value)}}\n                                placeholder=\"Enter User Name\"\n                            />\n                            <label className=\"form-label\">Username</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"password\" \n                                className=\"form-control form-control-lg\" \n                                value={oldPassword}\n                                onChange={(e) => {setOldPassword(validatePassword(e.target.value))}}\n                                placeholder=\"Enter Old Password\" \n                            />\n                            <label className=\"form-label\">Old Password</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"password\" \n                                className=\"form-control form-control-lg\" \n                                value={loginPassword}\n                                onChange={(e) => {setLoginPassword(e.target.value)}}\n                                placeholder=\"Enter New Password\" \n                            />\n                            <label className=\"form-label\">New Password</label>\n                        </div>\n                        <div className=\"form-outline mb-3\">\n                            <input type=\"password\" \n                                className=\"form-control form-control-lg\" \n                                value={confirmPassword}\n                                onChange={(e) => {setConfirmPassword(e.target.value)}}\n                                placeholder=\"Confirm password\"\n                            />\n                            <label className=\"form-label\">Confirm Password</label>\n                        </div>\n\n\n                        <div className=\"form-group row d-flex justify-content-center \">\n                            <div className=\"col-md-4\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg form-control\" onClick={doSettings}>Update</button>\n                            </div>\n\n                            <div className=\"col-md-4\">\n                                <button type=\"button\" className=\"btn btn-dark btn-lg form-control\" onClick={handleClickCancel}>Cancel</button>\n                            </div>\n\n                            <div className=\"divider d-flex align-items-center my-4\">\n                                <p className=\"text-center fw-bold mx-3 mb-1\">{message}</p>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default Settings;","import React from 'react';\n// import PageTitle from '../components/PageTitle';\n// import LoggedInName from '../components/LoggedInName';\n// import CardUI from '../components/CardUI';\n// import LoginRegister from '../components/Login';\n// import SearchCity from '../components/SearchCity';\n// import AddCity from '../components/AddCity';\nimport Settings from '../components/Settings';\n\n\nconst SettingsPage = () =>\n    {\n        return(\n\n            <div className = \"container\">\n\n                <Settings/>\n\n            </div>\n        );\n    };\nexport default SettingsPage;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport '../App.css';\n\nfunction AddReview() {\n\n    const [pageTitle, setPageTitle] = useState(localStorage.cityReview ? 'Add Review' : 'Add City');\n    const [checked, setChecked] = useState(false);\n    const [cityName, setCityName] = useState(localStorage.cityReview);\n    const [stateName, setStateName] = useState(localStorage.stateReview);\n    const [review, setReview] = useState(localStorage.commentReview);\n    var rates = JSON.parse(localStorage.ratingsReview);\n    const [ratingEnt, setRatingEnt] = useState('' + rates.entertainment);\n    const [ratingNat, setRatingNat] = useState('' + rates.nature);\n    const [ratingCos, setRatingCos] = useState('' + rates.cost);\n    const [ratingSaf, setRatingSaf] = useState('' + rates.safety);\n    const [ratingCul, setRatingCul] = useState('' + rates.culture);\n    const [ratingTra, setRatingTra] = useState('' + rates.transportation);\n    const [ratingFoo, setRatingFoo] = useState('' + rates.food);\n\n    const radios = [\n        { name: '1', value: '1' },\n        { name: '2', value: '2' },\n        { name: '3', value: '3' },\n        { name: '4', value: '4' },\n        { name: '5', value: '5' }\n    ];\n\n    const history = useHistory();\n    const [message, setMessage] = useState('');\n\n    const updateReview = async event => {\n        event.preventDefault();\n\n        // Edit Review\n        var obj = { \n            email:localStorage.userEmail,\n            city:localStorage.cityReview,\n            state:localStorage.stateReview,\n            rating:{\n                entertainment:ratingEnt,\n                nature:ratingNat,\n                cost:ratingCos,\n                safety:ratingSaf,\n                culture:ratingCul,\n                transportation:ratingTra,\n                food:ratingFoo},\n            review:review,\n            jwtToken:localStorage.accessToken};\n        var js = JSON.stringify(obj);\n\n        var config = {\n            method: 'post',\n            url: 'https://rate-my-city.herokuapp.com/api/editRating',\n            // url: 'https://jsonplaceholder.typicode.com/posts',\n            headers: { 'Content-Type': 'application/json' },\n            data: js\n        };\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if (res.error) {\n                    setMessage(res.error);\n                } else {\n                    setMessage('');\n                    returnFromEditCity(res);\n                }\n            })\n    }\n\n    function returnFromEditCity(result) {\n        localStorage.setItem('accessToken', result.jwtToken.accessToken);\n        localStorage.setItem('cityReview', '');\n        localStorage.setItem('stateReview', '');\n        localStorage.setItem('commentReview', '');\n        localStorage.setItem('ratingReview', '');\n        history.push(\"/\");\n    }\n\n    function handleClickCancel() {\n        localStorage.setItem('cityReview', '')\n        localStorage.setItem('stateReview', '')\n        localStorage.setItem('commentReview', '');\n        localStorage.setItem('ratingReview', '');\n        history.push(\"/\");\n    }\n\n\n    return(\n        <div className=\"container-fluid h-custom mt-0\">\n            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n                    <form >\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '8vh'}}>\n                            <h1>Edit Review</h1>\n                        </div>\n\n                        <div className=\"divider d-flex align-items-center mt-0 my-4\">\n                            <p className=\"text-center fw-bold mx-3 mb-3\"></p>\n                        </div>\n                        <div className=\"form-outline mt-1 mb-2\">\n                            <input type=\"text\" autoFocus \n                                className=\"form-control form-control-lg\" \n                                value={cityName}\n                                onChange={(e) => {setCityName(e.target.value)}}\n                                readOnly\n                            />\n                            <label className=\"form-label\">City</label>\n                        </div>\n\n                        <div className=\"form-outline mb-2\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={stateName}\n                                onChange={(e) => {setStateName(e.target.value)}}\n                                readOnly\n                            />\n                            <label className=\"form-label\">State</label>\n                        </div>\n\n                        <div className=\"form-outline mb-3\">\n                            <input type=\"text\" \n                                className=\"form-control form-control-lg\" \n                                value={review}\n                                onChange={(e) => {setReview(e.target.value)}}\n                                placeholder=\"Enter your review\" \n                            />\n                            <label className=\"form-label\">Enter Comment.  (Max. 250 characters)</label>\n                        </div>\n\n                        <div className=\"div-table\">\n                            <table className=\"inline-table\">\n                                <tr>\n                                    <td>Entertainment:&nbsp;</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio1-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark '}\n                                                name=\"radio1\"\n                                                value={radio.value}\n                                                checked={ratingEnt === radio.value}\n                                                onChange={(e) => setRatingEnt(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td>Nature :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio2-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio2\"\n                                                value={radio.value}\n                                                checked={ratingNat === radio.value}\n                                                onChange={(e) => setRatingNat(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td>Cost :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio3-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio3\"\n                                                value={radio.value}\n                                                checked={ratingCos === radio.value}\n                                                onChange={(e) => setRatingCos(e.currentTarget.value)}\n                                            >\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n\n                                </tr>\n\n                                <tr>\n                                    <td>Safety :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio4-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio4\"\n                                                value={radio.value}\n                                                checked={ratingSaf === radio.value}\n                                                onChange={(e) => setRatingSaf(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Culture :</td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio5-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio5\"\n                                                value={radio.value}\n                                                checked={ratingCul === radio.value}\n                                                onChange={(e) => setRatingCul(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Transportation:&nbsp;&nbsp;&nbsp; </td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio6-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio6\"\n                                                value={radio.value}\n                                                checked={ratingTra === radio.value}\n                                                onChange={(e) => setRatingTra(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Food: </td>\n                                    <td>\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                            <ToggleButton\n                                                key={idx}\n                                                id={`radio7-${idx}`}\n                                                type=\"radio\"\n                                                variant={'outline-warning warning text-dark'}\n                                                name=\"radio7\"\n                                                value={radio.value}\n                                                checked={ratingFoo === radio.value}\n                                                onChange={(e) => setRatingFoo(e.currentTarget.value)}>\n                                                {radio.name}\n                                            </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n\n                        <div className=\"form-group row d-flex justify-content-center mt-4\">\n                            <div className=\"col-md-4\">\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg align-items-center\" onClick={updateReview}>Update</button>\n                            </div>\n\n                            <div className=\"col-md-4\">\n                                <button type=\"button\" className=\"btn btn-dark btn-lg align-items-center\" onClick={handleClickCancel}>Cancel</button>\n                            </div>\n\n                            <div className=\"divider d-flex align-items-center mt-1 my-4\">\n                                <p className=\"text-center fw-bold mx-3 mb-5\">{message}</p>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default AddReview;","import React from 'react';\nimport EditReview from '../components/EditReview.js';\n\n\nconst EditReviewPage = () => {\n\n    return(\n\n        <div className = \"container\">\n\n            <EditReview/>\n\n        </div>\n    );\n};\n\nexport default EditReviewPage;","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './pages/LoginPage';\nimport MainPage from './pages/MainPage';\nimport AddCityStatePage from './pages/AddCityStatePage';\nimport AddReviewPage from './pages/AddReviewPage';\nimport SettingsPage from './pages/SettingsPage';\nimport EditReviewPage from './pages/EditReviewPage';\n\nfunction App() {\n    return (\n        <Router >\n            <Switch>\n                <Route path=\"/\" exact>\n                    <MainPage />\n                </Route>\n                <Route path=\"/login\" exact>\n                    <LoginPage />\n                </Route>\n                <Route path=\"/AddCity\" exact>\n                    <AddCityStatePage />\n                </Route>\n                <Route path=\"/AddReview\" exact>\n                    <AddReviewPage />\n                </Route>\n                <Route path=\"/EditReview\" exact>\n                    <EditReviewPage />\n                </Route>\n                <Route path=\"/Settings\" exact>\n                    <SettingsPage />\n                </Route>\n\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n    );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}